/// <reference types="node" />
import * as fs from "fs-extra";
import { IDriveConfig, IFsObject, IListConfig, IOperationConfig, IPolicy } from "./types";
export default class LocalFiles {
    private policy;
    private _root;
    private _config;
    constructor(root: string, policy?: IPolicy, config?: IDriveConfig);
    list(path: string, config?: IListConfig): Promise<IFsObject[]>;
    remove(path: string): Promise<void>;
    read(path: string): Promise<fs.ReadStream>;
    write(path: string, data: fs.ReadStream, config?: IOperationConfig): Promise<string>;
    info(id: any): Promise<IFsObject>;
    mkdir(path: string, config?: IOperationConfig): Promise<string>;
    copy(sourceId: string, targetId: string, config?: IOperationConfig): Promise<string>;
    exists(source: string): Promise<boolean>;
    move(source: string, target: string, config?: IOperationConfig): Promise<string>;
    private isFolder;
    private idToPath;
    private pathToId;
    private _listFolder;
    private getNewName;
    private checkName;
}
